'''Descriptive statistics'''

Rapport package team

''2011-04-26 20:25 CET''


=== Description ===

This template will return descriptive statistics of a numerical, or a frequency table of a categorical variable. 

=== *gender* ("Gender") ===

The dataset has _709_ observations with _673_ valid values (missing: _36_) in *gender* ("Gender"), which seems to be a qualitative variable. 

==== Base statistics ====

'''gender'''   '''N'''   '''%'''     '''Cumul. N'''   '''Cumul. %'''  
<s>--------</s> <s>---</s> <s>-----</s> <s>----------</s> <s>----------</s>
male         410     60.9212   410            60.9212       
female       263     39.0788   673            100           
Total        673     100       673            100           
<s>--------</s> <s>---</s> <s>-----</s> <s>----------</s> <s>----------</s>

==== Barplot ====

[[Image:3ed92ab3ffc6e875335e7e8c774c35a8.png|center]]

It seems that the highest value is _2_ which is exactly 2 times higher than the smallest value (_1_). 

The most frequent value is *male*. 

=== Description ===

This template will return descriptive statistics of a numerical, or a frequency table of a categorical variable. 

=== *age* ("Age") ===

The dataset has _709_ observations with _677_ valid values (missing: _32_) in *age* ("Age"), which seems to be a quantitative variable. 

==== Base statistics ====

'''value'''   '''mean(age)'''   '''sd(age)'''   '''var(age)'''  
<s>-------</s> <s>-----------</s> <s>---------</s> <s>----------</s>
(all)       24.5731         6.8491        46.9107       
<s>-------</s> <s>-----------</s> <s>---------</s> <s>----------</s>

==== Histogram ====

[[Image:ac5d789145bdef09b10219ef16429f53.png|center]]

It seems that the highest value is _58_ which is exactly 3.625 times higher than the smallest value (_16_). 

The standard deviation is _6.8491_ (variance: _46.9107_). The expected value is around _24.5731_, somewhere between _24.0572_ and _25.0891_ with the standard error of _0.2632_. 

If we suppose that *Age* is not near to a normal distribution (test: see below, skewness: _1.9296_, kurtosis: _7.4851_), checking the median (_23_) might be a better option instead of the mean. The interquartile range (_6_) measures the statistics dispersion of the variable (similar to standard deviation) based on median. 

==== Normality tests ====

===== Introduction =====

In statistics, _normality_ refers to an assumption that the distribution of a random variable follows _normal_ (_Gaussian_) distribution. Because of its bell-like shape, it's also known as the _"bell curve"_. The formula for _normal distribution_ is: 

$$f(x) = \frac{1}{\sqrt{2\pi{}\sigma{}^2}} e^{-\frac{(x-\mu{})^2}{2\sigma{}^2}}$$ 

_Normal distribution_ belongs to a _location-scale family_ of distributions, as it's defined two parameters: 

* *&mu;* - _mean_ or _expectation_ (location parameter)
* *&sigma;^2^* - _variance_ (scale parameter) 

[[Image:2f8c434e103f36ec70966b372838d448.png|center]]

===== Normality Tests =====

====== Overview ======

Various hypothesis tests can be applied in order to test if the distribution of given random variable violates normality assumption. These procedures test the H~0~ that provided variable's distribution is _normal_. At this point only few such tests will be covered: the ones that are available in `stats` package (which comes bundled with default R installation) and `nortest` package that is [available]([http://cran.r-project.org/web/packages/nortest/index.html]) on CRAN. 

* '''Shapiro-Wilk test''' is a powerful normality test appropriate for small samples. In R, it's implemented in `shapiro.test` function available in `stats` package.
* '''Lilliefors test''' is a modification of _Kolmogorov-Smirnov test_ appropriate for testing normality when parameters or normal distribution (_&mu;_, _&sigma;^2^_) are not known. `lillie.test` function is located in `nortest` package.
* '''Anderson-Darling test''' is one of the most powerful normality tests as it will detect the most of departures from normality. You can find `ad.test` function in `nortest` package.
* '''Pearson &Chi;^2^ test''' is another normality test which takes more "traditional" approach in normality testing. `pearson.test` is located in `nortest` package. 

===== Results =====

Here you can see the results of applied normality tests (_p-values_ less than 0.05 indicate significant discrepancies): 

_0.05_ 

So, let's draw some conclusions based on applied normality test: 

* according to _Shapiro-Wilk test_, the distribution of _Age_ is not normal.
* based on _Lilliefors test_, distribution of _Age_ is not normal
* _Anderson-Darling test_ confirms violation of normality assumption
* _Pearson's &Chi;^2^ test_ classifies the underlying distribution as non-normal 

==== Diagnostic Plots ====

There are various plots that can help you decide about the normality of the distribution. Only a few most commonly used plots will be shown: _histogram_, _Q-Q plot_ and _kernel density plot_. 

====== Histogram ======

_Histogram_ was first introduced by _Karl Pearson_ and it's probably the most popular plot for depicting the probability distribution of a random variable. However, the decision depends on number of bins, so it can sometimes be misleading. If the variable distribution is normal, bins should resemble the "bell-like" shape. 

[[Image:ac5d789145bdef09b10219ef16429f53.png|center]]

====== Q-Q Plot ======

"Q" in _Q-Q plot_ stands for _quantile_, as this plot compares empirical and theoretical distribution (in this case, _normal_ distribution) by plotting their quantiles against each other. For normal distribution, plotted dots should approximate a "straight", `x = y` line. 

[[Image:cbbba756d844aa053998959b73b9feff.png|center]]

====== Kernel Density Plot ======

_Kernel density plot_ is a plot of smoothed _empirical distribution function_. As such, it provides good insight about the shape of the distribution. For normal distributions, it should resemble the well known "bell shape". 

[[Image:4599005cf6ab3467d8da53b77f40ff98.png|center]]

<s>---</s>
This report was generated in [R]([http://www.r-project.org/]) with [Rapport]([http://al3xa.github.com/rapport/]) in 0.76 sec. Feel free to create [templates your own reporting]([http://al3xa.github.com/rapport/#custom])! 

[[Image:images/rapport.png|center]]

<!-- wiki code generated by txt2tags 2.6 (http://txt2tags.org) -->
<!-- cmdline: txt2tags -\-encoding=UTF-8 -t wiki -o demo/descriptives-univar.wiki demo/descriptives-univar.txt -->
